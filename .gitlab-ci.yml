image: docker:latest

services:
  # Register an extra runner for this (we need to run docker commands in the runner)
  # https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#docker-in-docker-with-tls-disabled
  - docker:dind

  # Instead of using Docker in Docker, we could install and use Docker on the runner server itself
  # https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-the-shell-executor

stages:
  - build
  - test
  - deploy

variables:
  CI_REGISTRY_USER: $CI_REGISTRY_USER
  CI_REGISTRY_PASSWORD: $CI_REGISTRY_PASSWORD
  CI_REGISTRY: $CI_REGISTRY

before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

build:
  stage: build
  script:
    - echo "Build Container"
    - docker build -t $CI_REGISTRY_USER/getting-started:$CI_COMMIT_REF_NAME .
    - docker push $CI_REGISTRY_USER/getting-started:$CI_COMMIT_REF_NAME

test:
  stage: test
  script:
    - echo "Run Tests"
    - docker run -d --name test-getting-started $CI_REGISTRY_USER/getting-started:$CI_COMMIT_REF_NAME
    - docker exec test-getting-started yarn test


deploy:
  stage: deploy
  script:
    - echo "This job deploys something from the $CI_COMMIT_REF_NAME branch."
    - docker pull $CI_REGISTRY_USER/getting-started:$CI_COMMIT_REF_NAME
    - docker tag $CI_REGISTRY_USER/getting-started:$CI_COMMIT_REF_NAME $CI_REGISTRY_USER/getting-started
    - docker push $CI_REGISTRY_USER/getting-started